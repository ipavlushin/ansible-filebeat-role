versions pytest-3.0.7, py-1.4.33, python-2.7.5.final.0
cwd=/etc/ansible/roles/filebeat
args=['tests/test_default.py', '--debug', '--connection=docker']

  pytest_cmdline_main [hook]
      config: <_pytest.config.Config object at 0x7f576f55add0>
    pytest_plugin_registered [hook]
        manager: <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>
        plugin: <Session 'filebeat'>
    finish pytest_plugin_registered --> [] [hook]
    pytest_configure [hook]
        config: <_pytest.config.Config object at 0x7f576f55add0>
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>
          plugin: <_pytest.cacheprovider.LFPlugin instance at 0x271db90>
      finish pytest_plugin_registered --> [] [hook]
    find_module called for: py._io.terminalwriter [assertion]
    find_module called for: py._io.termios [assertion]
    find_module called for: termios [assertion]
    find_module called for: py._io.fcntl [assertion]
    find_module called for: py._io.struct [assertion]
      pytest_logwarning [hook]
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'message': 'Module already imported so can not be re-written: testinfra', 'code': 'P1', 'nodeid': None, 'fslocation': None}>
          message: Module already imported so can not be re-written: testinfra
          code: P1
          nodeid: None
          fslocation: None
      finish pytest_logwarning --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>}>
          plugin: <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <_pytest.config.Config object at 0x7f576f55add0>}>
          plugin: <_pytest.config.Config object at 0x7f576f55add0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.mark' from '/usr/lib/python2.7/site-packages/_pytest/mark.pyc'>}>
          plugin: <module '_pytest.mark' from '/usr/lib/python2.7/site-packages/_pytest/mark.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.main' from '/usr/lib/python2.7/site-packages/_pytest/main.pyc'>}>
          plugin: <module '_pytest.main' from '/usr/lib/python2.7/site-packages/_pytest/main.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.terminal' from '/usr/lib/python2.7/site-packages/_pytest/terminal.pyc'>}>
          plugin: <module '_pytest.terminal' from '/usr/lib/python2.7/site-packages/_pytest/terminal.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.runner' from '/usr/lib/python2.7/site-packages/_pytest/runner.pyc'>}>
          plugin: <module '_pytest.runner' from '/usr/lib/python2.7/site-packages/_pytest/runner.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.python' from '/usr/lib/python2.7/site-packages/_pytest/python.pyc'>}>
          plugin: <module '_pytest.python' from '/usr/lib/python2.7/site-packages/_pytest/python.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.fixtures' from '/usr/lib/python2.7/site-packages/_pytest/fixtures.pyc'>}>
          plugin: <module '_pytest.fixtures' from '/usr/lib/python2.7/site-packages/_pytest/fixtures.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.debugging' from '/usr/lib/python2.7/site-packages/_pytest/debugging.pyc'>}>
          plugin: <module '_pytest.debugging' from '/usr/lib/python2.7/site-packages/_pytest/debugging.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.unittest' from '/usr/lib/python2.7/site-packages/_pytest/unittest.pyc'>}>
          plugin: <module '_pytest.unittest' from '/usr/lib/python2.7/site-packages/_pytest/unittest.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.capture' from '/usr/lib/python2.7/site-packages/_pytest/capture.pyc'>}>
          plugin: <module '_pytest.capture' from '/usr/lib/python2.7/site-packages/_pytest/capture.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.skipping' from '/usr/lib/python2.7/site-packages/_pytest/skipping.pyc'>}>
          plugin: <module '_pytest.skipping' from '/usr/lib/python2.7/site-packages/_pytest/skipping.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.tmpdir' from '/usr/lib/python2.7/site-packages/_pytest/tmpdir.pyc'>}>
          plugin: <module '_pytest.tmpdir' from '/usr/lib/python2.7/site-packages/_pytest/tmpdir.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.monkeypatch' from '/usr/lib/python2.7/site-packages/_pytest/monkeypatch.pyc'>}>
          plugin: <module '_pytest.monkeypatch' from '/usr/lib/python2.7/site-packages/_pytest/monkeypatch.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.recwarn' from '/usr/lib/python2.7/site-packages/_pytest/recwarn.pyc'>}>
          plugin: <module '_pytest.recwarn' from '/usr/lib/python2.7/site-packages/_pytest/recwarn.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.pastebin' from '/usr/lib/python2.7/site-packages/_pytest/pastebin.pyc'>}>
          plugin: <module '_pytest.pastebin' from '/usr/lib/python2.7/site-packages/_pytest/pastebin.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.helpconfig' from '/usr/lib/python2.7/site-packages/_pytest/helpconfig.pyc'>}>
          plugin: <module '_pytest.helpconfig' from '/usr/lib/python2.7/site-packages/_pytest/helpconfig.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.nose' from '/usr/lib/python2.7/site-packages/_pytest/nose.pyc'>}>
          plugin: <module '_pytest.nose' from '/usr/lib/python2.7/site-packages/_pytest/nose.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.assertion' from '/usr/lib/python2.7/site-packages/_pytest/assertion/__init__.pyc'>}>
          plugin: <module '_pytest.assertion' from '/usr/lib/python2.7/site-packages/_pytest/assertion/__init__.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.junitxml' from '/usr/lib/python2.7/site-packages/_pytest/junitxml.pyc'>}>
          plugin: <module '_pytest.junitxml' from '/usr/lib/python2.7/site-packages/_pytest/junitxml.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.resultlog' from '/usr/lib/python2.7/site-packages/_pytest/resultlog.pyc'>}>
          plugin: <module '_pytest.resultlog' from '/usr/lib/python2.7/site-packages/_pytest/resultlog.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.doctest' from '/usr/lib/python2.7/site-packages/_pytest/doctest.pyc'>}>
          plugin: <module '_pytest.doctest' from '/usr/lib/python2.7/site-packages/_pytest/doctest.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.cacheprovider' from '/usr/lib/python2.7/site-packages/_pytest/cacheprovider.pyc'>}>
          plugin: <module '_pytest.cacheprovider' from '/usr/lib/python2.7/site-packages/_pytest/cacheprovider.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.freeze_support' from '/usr/lib/python2.7/site-packages/_pytest/freeze_support.pyc'>}>
          plugin: <module '_pytest.freeze_support' from '/usr/lib/python2.7/site-packages/_pytest/freeze_support.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.setuponly' from '/usr/lib/python2.7/site-packages/_pytest/setuponly.pyc'>}>
          plugin: <module '_pytest.setuponly' from '/usr/lib/python2.7/site-packages/_pytest/setuponly.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.setupplan' from '/usr/lib/python2.7/site-packages/_pytest/setupplan.pyc'>}>
          plugin: <module '_pytest.setupplan' from '/usr/lib/python2.7/site-packages/_pytest/setupplan.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module 'testinfra.plugin' from '/usr/lib/python2.7/site-packages/testinfra/plugin.py'>}>
          plugin: <module 'testinfra.plugin' from '/usr/lib/python2.7/site-packages/testinfra/plugin.py'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <_pytest.capture.CaptureManager instance at 0x279c3b0>}>
          plugin: <_pytest.capture.CaptureManager instance at 0x279c3b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <Session 'filebeat'>}>
          plugin: <Session 'filebeat'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <_pytest.cacheprovider.LFPlugin instance at 0x271db90>}>
          plugin: <_pytest.cacheprovider.LFPlugin instance at 0x271db90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>
          plugin: <_pytest.terminal.TerminalReporter instance at 0x271d5f0>
      finish pytest_plugin_registered --> [] [hook]
    finish pytest_configure --> [] [hook]
    pytest_sessionstart [hook]
        session: <Session 'filebeat'>
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>}>
          plugin: <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <_pytest.config.Config object at 0x7f576f55add0>}>
          plugin: <_pytest.config.Config object at 0x7f576f55add0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.mark' from '/usr/lib/python2.7/site-packages/_pytest/mark.pyc'>}>
          plugin: <module '_pytest.mark' from '/usr/lib/python2.7/site-packages/_pytest/mark.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.main' from '/usr/lib/python2.7/site-packages/_pytest/main.pyc'>}>
          plugin: <module '_pytest.main' from '/usr/lib/python2.7/site-packages/_pytest/main.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.terminal' from '/usr/lib/python2.7/site-packages/_pytest/terminal.pyc'>}>
          plugin: <module '_pytest.terminal' from '/usr/lib/python2.7/site-packages/_pytest/terminal.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.runner' from '/usr/lib/python2.7/site-packages/_pytest/runner.pyc'>}>
          plugin: <module '_pytest.runner' from '/usr/lib/python2.7/site-packages/_pytest/runner.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.python' from '/usr/lib/python2.7/site-packages/_pytest/python.pyc'>}>
          plugin: <module '_pytest.python' from '/usr/lib/python2.7/site-packages/_pytest/python.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.fixtures' from '/usr/lib/python2.7/site-packages/_pytest/fixtures.pyc'>}>
          plugin: <module '_pytest.fixtures' from '/usr/lib/python2.7/site-packages/_pytest/fixtures.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.debugging' from '/usr/lib/python2.7/site-packages/_pytest/debugging.pyc'>}>
          plugin: <module '_pytest.debugging' from '/usr/lib/python2.7/site-packages/_pytest/debugging.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.unittest' from '/usr/lib/python2.7/site-packages/_pytest/unittest.pyc'>}>
          plugin: <module '_pytest.unittest' from '/usr/lib/python2.7/site-packages/_pytest/unittest.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.capture' from '/usr/lib/python2.7/site-packages/_pytest/capture.pyc'>}>
          plugin: <module '_pytest.capture' from '/usr/lib/python2.7/site-packages/_pytest/capture.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.skipping' from '/usr/lib/python2.7/site-packages/_pytest/skipping.pyc'>}>
          plugin: <module '_pytest.skipping' from '/usr/lib/python2.7/site-packages/_pytest/skipping.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.tmpdir' from '/usr/lib/python2.7/site-packages/_pytest/tmpdir.pyc'>}>
          plugin: <module '_pytest.tmpdir' from '/usr/lib/python2.7/site-packages/_pytest/tmpdir.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.monkeypatch' from '/usr/lib/python2.7/site-packages/_pytest/monkeypatch.pyc'>}>
          plugin: <module '_pytest.monkeypatch' from '/usr/lib/python2.7/site-packages/_pytest/monkeypatch.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.recwarn' from '/usr/lib/python2.7/site-packages/_pytest/recwarn.pyc'>}>
          plugin: <module '_pytest.recwarn' from '/usr/lib/python2.7/site-packages/_pytest/recwarn.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.pastebin' from '/usr/lib/python2.7/site-packages/_pytest/pastebin.pyc'>}>
          plugin: <module '_pytest.pastebin' from '/usr/lib/python2.7/site-packages/_pytest/pastebin.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.helpconfig' from '/usr/lib/python2.7/site-packages/_pytest/helpconfig.pyc'>}>
          plugin: <module '_pytest.helpconfig' from '/usr/lib/python2.7/site-packages/_pytest/helpconfig.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.nose' from '/usr/lib/python2.7/site-packages/_pytest/nose.pyc'>}>
          plugin: <module '_pytest.nose' from '/usr/lib/python2.7/site-packages/_pytest/nose.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.assertion' from '/usr/lib/python2.7/site-packages/_pytest/assertion/__init__.pyc'>}>
          plugin: <module '_pytest.assertion' from '/usr/lib/python2.7/site-packages/_pytest/assertion/__init__.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.junitxml' from '/usr/lib/python2.7/site-packages/_pytest/junitxml.pyc'>}>
          plugin: <module '_pytest.junitxml' from '/usr/lib/python2.7/site-packages/_pytest/junitxml.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.resultlog' from '/usr/lib/python2.7/site-packages/_pytest/resultlog.pyc'>}>
          plugin: <module '_pytest.resultlog' from '/usr/lib/python2.7/site-packages/_pytest/resultlog.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.doctest' from '/usr/lib/python2.7/site-packages/_pytest/doctest.pyc'>}>
          plugin: <module '_pytest.doctest' from '/usr/lib/python2.7/site-packages/_pytest/doctest.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.cacheprovider' from '/usr/lib/python2.7/site-packages/_pytest/cacheprovider.pyc'>}>
          plugin: <module '_pytest.cacheprovider' from '/usr/lib/python2.7/site-packages/_pytest/cacheprovider.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.freeze_support' from '/usr/lib/python2.7/site-packages/_pytest/freeze_support.pyc'>}>
          plugin: <module '_pytest.freeze_support' from '/usr/lib/python2.7/site-packages/_pytest/freeze_support.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.setuponly' from '/usr/lib/python2.7/site-packages/_pytest/setuponly.pyc'>}>
          plugin: <module '_pytest.setuponly' from '/usr/lib/python2.7/site-packages/_pytest/setuponly.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.setupplan' from '/usr/lib/python2.7/site-packages/_pytest/setupplan.pyc'>}>
          plugin: <module '_pytest.setupplan' from '/usr/lib/python2.7/site-packages/_pytest/setupplan.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module 'testinfra.plugin' from '/usr/lib/python2.7/site-packages/testinfra/plugin.py'>}>
          plugin: <module 'testinfra.plugin' from '/usr/lib/python2.7/site-packages/testinfra/plugin.py'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <_pytest.capture.CaptureManager instance at 0x279c3b0>}>
          plugin: <_pytest.capture.CaptureManager instance at 0x279c3b0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <Session 'filebeat'>}>
          plugin: <Session 'filebeat'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <_pytest.cacheprovider.LFPlugin instance at 0x271db90>}>
          plugin: <_pytest.cacheprovider.LFPlugin instance at 0x271db90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <_pytest.terminal.TerminalReporter instance at 0x271d5f0>}>
          plugin: <_pytest.terminal.TerminalReporter instance at 0x271d5f0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f577aeadbd0>
          plugin: <_pytest.fixtures.FixtureManager instance at 0x242d368>
      finish pytest_plugin_registered --> [] [hook]
      pytest_report_header [hook]
          startdir: /etc/ansible/roles/filebeat
          config: <_pytest.config.Config object at 0x7f576f55add0>
      finish pytest_report_header --> [['rootdir: /etc/ansible/roles/filebeat, inifile:', 'plugins: testinfra-1.5.5'], ['using: pytest-3.0.7 pylib-1.4.33', 'setuptools registered plugins:', '  testinfra-1.5.5 at /usr/lib/python2.7/site-packages/testinfra/plugin.py']] [hook]
    finish pytest_sessionstart --> [] [hook]
    pytest_collection [hook]
        session: <Session 'filebeat'>
    perform_collect <Session 'filebeat'> ['tests/test_default.py'] [collection]
        pytest_collectstart [hook]
            collector: <Session 'filebeat'>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Session 'filebeat'>
        processing argument /etc/ansible/roles/filebeat/tests/test_default.py [collection]
            pytest_collect_file [hook]
                path: /etc/ansible/roles/filebeat/tests/test_default.py
                parent: <Session 'filebeat'>
              pytest_pycollect_makemodule [hook]
                  path: /etc/ansible/roles/filebeat/tests/test_default.py
                  parent: <Session 'filebeat'>
              finish pytest_pycollect_makemodule --> <Module 'tests/test_default.py'> [hook]
            finish pytest_collect_file --> [<Module 'tests/test_default.py'>] [hook]
          matchnodes [<Module 'tests/test_default.py'>] [] [collection]
            matchnodes finished ->  1 nodes [collection]
        finish pytest_make_collect_report --> <CollectReport '' lenresult=1 outcome='passed'> [hook]
        pytest_collectreport [hook]
            report: <CollectReport '' lenresult=1 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
    genitems <Module 'tests/test_default.py'> [collection]
      pytest_collectstart [hook]
          collector: <Module 'tests/test_default.py'>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module 'tests/test_default.py'>
      find_module called for: test_default [assertion]
      matched test file (was specified on cmdline): '/etc/ansible/roles/filebeat/tests/test_default.py' [assertion]
      found cached rewritten pyc for '/etc/ansible/roles/filebeat/tests/test_default.py' [assertion]
      find_module called for: testinfra.utils [assertion]
      matched marked file 'testinfra.utils' (from 'testinfra') [assertion]
      rewriting '/usr/lib/python2.7/site-packages/testinfra/utils.py' [assertion]
      find_module called for: testinfra.utils.ansible_runner [assertion]
      matched marked file 'testinfra.utils.ansible_runner' (from 'testinfra') [assertion]
      found cached rewritten pyc for '/usr/lib/python2.7/site-packages/testinfra/utils/ansible_runner.py' [assertion]
      find_module called for: ansible [assertion]
      find_module called for: ansible.release [assertion]
      find_module called for: ansible.constants [assertion]
      find_module called for: ansible.compat [assertion]
      find_module called for: ansible.compat.six [assertion]
      find_module called for: pipes [assertion]
      find_module called for: ansible.compat.six.moves [assertion]
      find_module called for: ansible.errors [assertion]
      find_module called for: ansible.errors.yaml_strings [assertion]
      find_module called for: ansible.module_utils [assertion]
      find_module called for: ansible.module_utils._text [assertion]
      find_module called for: ansible.module_utils.codecs [assertion]
      find_module called for: ansible.module_utils.ansible [assertion]
      find_module called for: ansible.module_utils.six [assertion]
      find_module called for: ansible.module_utils.operator [assertion]
      find_module called for: ansible.module_utils.sys [assertion]
      find_module called for: ansible.module_utils.types [assertion]
      find_module called for: ansible.module_utils.StringIO [assertion]
      find_module called for: ansible.parsing [assertion]
      find_module called for: ansible.parsing.quoting [assertion]
      find_module called for: ansible.utils [assertion]
      find_module called for: ansible.utils.path [assertion]
      find_module called for: ansible.cli [assertion]
      find_module called for: optparse [assertion]
      find_module called for: yaml [assertion]
      find_module called for: yaml.error [assertion]
      find_module called for: yaml.tokens [assertion]
      find_module called for: yaml.events [assertion]
      find_module called for: yaml.nodes [assertion]
      find_module called for: yaml.loader [assertion]
      find_module called for: yaml.reader [assertion]
      find_module called for: yaml.codecs [assertion]
      find_module called for: yaml.re [assertion]
      find_module called for: yaml.scanner [assertion]
      find_module called for: yaml.parser [assertion]
      find_module called for: yaml.composer [assertion]
      find_module called for: yaml.constructor [assertion]
      find_module called for: yaml.datetime [assertion]
      find_module called for: yaml.binascii [assertion]
      find_module called for: yaml.sys [assertion]
      find_module called for: yaml.types [assertion]
      find_module called for: yaml.resolver [assertion]
      find_module called for: yaml.dumper [assertion]
      find_module called for: yaml.emitter [assertion]
      find_module called for: yaml.serializer [assertion]
      find_module called for: yaml.representer [assertion]
      find_module called for: yaml.copy_reg [assertion]
      find_module called for: yaml.cyaml [assertion]
      find_module called for: yaml._yaml [assertion]
      find_module called for: _yaml [assertion]
      find_module called for: getpass [assertion]
      find_module called for: subprocess [assertion]
      find_module called for: gc [assertion]
      find_module called for: select [assertion]
      find_module called for: pickle [assertion]
      find_module called for: org [assertion]
      find_module called for: ansible.utils.display [assertion]
      find_module called for: ansible.utils.color [assertion]
      find_module called for: ansible.cli.playbook [assertion]
      find_module called for: ansible.executor [assertion]
      find_module called for: ansible.executor.playbook_executor [assertion]
      find_module called for: ansible.executor.task_queue_manager [assertion]
      find_module called for: multiprocessing [assertion]
      find_module called for: multiprocessing.os [assertion]
      find_module called for: multiprocessing.sys [assertion]
      find_module called for: multiprocessing.multiprocessing [assertion]
      find_module called for: multiprocessing.process [assertion]
      find_module called for: multiprocessing.signal [assertion]
      find_module called for: multiprocessing.itertools [assertion]
      find_module called for: multiprocessing.util [assertion]
      find_module called for: multiprocessing.weakref [assertion]
      find_module called for: multiprocessing.atexit [assertion]
      find_module called for: multiprocessing.threading [assertion]
      find_module called for: multiprocessing.subprocess [assertion]
      find_module called for: multiprocessing._multiprocessing [assertion]
      find_module called for: _multiprocessing [assertion]
      find_module called for: cPickle [assertion]
      find_module called for: ansible.executor.play_iterator [assertion]
      find_module called for: ansible.playbook [assertion]
      find_module called for: ansible.playbook.play [assertion]
      find_module called for: ansible.playbook.attribute [assertion]
      find_module called for: ansible.playbook.base [assertion]
      find_module called for: jinja2 [assertion]
      find_module called for: jinja2.jinja2 [assertion]
      find_module called for: jinja2.environment [assertion]
      find_module called for: jinja2.os [assertion]
      find_module called for: jinja2.sys [assertion]
      find_module called for: jinja2.weakref [assertion]
      find_module called for: jinja2.functools [assertion]
      find_module called for: jinja2.nodes [assertion]
      find_module called for: jinja2.types [assertion]
      find_module called for: jinja2.operator [assertion]
      find_module called for: jinja2.collections [assertion]
      find_module called for: jinja2.utils [assertion]
      find_module called for: jinja2.re [assertion]
      find_module called for: jinja2.json [assertion]
      find_module called for: jinja2.errno [assertion]
      find_module called for: jinja2.threading [assertion]
      find_module called for: jinja2._compat [assertion]
      find_module called for: jinja2.cPickle [assertion]
      find_module called for: jinja2.cStringIO [assertion]
      find_module called for: jinja2.itertools [assertion]
      find_module called for: jinja2.urllib [assertion]
      find_module called for: jinja2.markupsafe [assertion]
      find_module called for: markupsafe [assertion]
      find_module called for: markupsafe.re [assertion]
      find_module called for: markupsafe.string [assertion]
      find_module called for: markupsafe.collections [assertion]
      find_module called for: markupsafe.markupsafe [assertion]
      find_module called for: markupsafe._compat [assertion]
      find_module called for: markupsafe.sys [assertion]
      find_module called for: markupsafe._speedups [assertion]
      find_module called for: jinja2.defaults [assertion]
      find_module called for: jinja2.filters [assertion]
      find_module called for: jinja2.math [assertion]
      find_module called for: jinja2.random [assertion]
      find_module called for: jinja2.runtime [assertion]
      find_module called for: jinja2.exceptions [assertion]
      find_module called for: jinja2.tests [assertion]
      find_module called for: jinja2.decimal [assertion]
      find_module called for: decimal [assertion]
      find_module called for: numbers [assertion]
      find_module called for: jinja2.lexer [assertion]
      find_module called for: jinja2.parser [assertion]
      find_module called for: jinja2.compiler [assertion]
      find_module called for: jinja2.copy [assertion]
      find_module called for: jinja2.keyword [assertion]
      find_module called for: jinja2.visitor [assertion]
      find_module called for: jinja2.optimizer [assertion]
      find_module called for: jinja2.idtracking [assertion]
      find_module called for: jinja2.loaders [assertion]
      find_module called for: jinja2.hashlib [assertion]
      find_module called for: jinja2.bccache [assertion]
      find_module called for: jinja2.stat [assertion]
      find_module called for: jinja2.marshal [assertion]
      find_module called for: jinja2.tempfile [assertion]
      find_module called for: jinja2.fnmatch [assertion]
      find_module called for: encodings.ascii [assertion]
      find_module called for: ansible.parsing.dataloader [assertion]
      find_module called for: ansible.module_utils.basic [assertion]
      find_module called for: ansible.module_utils.locale [assertion]
      find_module called for: ansible.module_utils.os [assertion]
      find_module called for: ansible.module_utils.re [assertion]
      find_module called for: ansible.module_utils.pipes [assertion]
      find_module called for: ansible.module_utils.shlex [assertion]
      find_module called for: ansible.module_utils.subprocess [assertion]
      find_module called for: ansible.module_utils.time [assertion]
      find_module called for: ansible.module_utils.select [assertion]
      find_module called for: ansible.module_utils.shutil [assertion]
      find_module called for: ansible.module_utils.stat [assertion]
      find_module called for: ansible.module_utils.tempfile [assertion]
      find_module called for: ansible.module_utils.traceback [assertion]
      find_module called for: ansible.module_utils.grp [assertion]
      find_module called for: ansible.module_utils.pwd [assertion]
      find_module called for: ansible.module_utils.platform [assertion]
      find_module called for: ansible.module_utils.errno [assertion]
      find_module called for: ansible.module_utils.datetime [assertion]
      find_module called for: ansible.module_utils.itertools [assertion]
      find_module called for: ansible.module_utils.syslog [assertion]
      find_module called for: syslog [assertion]
      find_module called for: ansible.module_utils.systemd [assertion]
      find_module called for: systemd [assertion]
      find_module called for: ansible.module_utils.selinux [assertion]
      find_module called for: selinux [assertion]
      find_module called for: selinux.sys [assertion]
      find_module called for: selinux.os [assertion]
      find_module called for: selinux.imp [assertion]
      find_module called for: swig_runtime_data4 [assertion]
      find_module called for: selinux.shutil [assertion]
      find_module called for: selinux.errno [assertion]
      find_module called for: selinux.stat [assertion]
      find_module called for: ansible.module_utils.collections [assertion]
      find_module called for: ansible.module_utils.json [assertion]
      find_module called for: ansible.module_utils.hashlib [assertion]
      find_module called for: ansible.module_utils.pycompat24 [assertion]
      find_module called for: ansible.module_utils.ast [assertion]
      find_module called for: ansible.parsing.vault [assertion]
      find_module called for: Crypto [assertion]
      find_module called for: Crypto.Hash [assertion]
      find_module called for: Crypto.Hash.SHA256 [assertion]
      find_module called for: Crypto.Hash.Crypto [assertion]
      find_module called for: Crypto.Util [assertion]
      find_module called for: Crypto.Util.py3compat [assertion]
      find_module called for: Crypto.Util.sys [assertion]
      find_module called for: Crypto.Hash.hashalgo [assertion]
      find_module called for: Crypto.Hash.binascii [assertion]
      find_module called for: Crypto.Hash.hashlib [assertion]
      find_module called for: Crypto.Hash.HMAC [assertion]
      find_module called for: Crypto.Util.strxor [assertion]
      find_module called for: Crypto.Util.Counter [assertion]
      find_module called for: Crypto.Util.Crypto [assertion]
      find_module called for: Crypto.Util._counter [assertion]
      find_module called for: Crypto.Util.struct [assertion]
      find_module called for: Crypto.Protocol [assertion]
      find_module called for: Crypto.Protocol.KDF [assertion]
      find_module called for: Crypto.Protocol.math [assertion]
      find_module called for: Crypto.Protocol.struct [assertion]
      find_module called for: Crypto.Protocol.Crypto [assertion]
      find_module called for: Crypto.Hash.SHA [assertion]
      find_module called for: Crypto.Cipher [assertion]
      find_module called for: Crypto.Cipher.AES [assertion]
      find_module called for: Crypto.Cipher.Crypto [assertion]
      find_module called for: Crypto.Cipher.blockalgo [assertion]
      find_module called for: Crypto.Cipher.sys [assertion]
      find_module called for: Crypto.Cipher._AES [assertion]
      find_module called for: cryptography [assertion]
      find_module called for: cryptography.__about__ [assertion]
      find_module called for: cryptography.hazmat [assertion]
      find_module called for: cryptography.hazmat.primitives [assertion]
      find_module called for: cryptography.hazmat.primitives.hashes [assertion]
      find_module called for: cryptography.utils [assertion]
      find_module called for: cryptography.exceptions [assertion]
      find_module called for: cryptography.hazmat.backends [assertion]
      find_module called for: cryptography.hazmat.backends.multibackend [assertion]
      find_module called for: cryptography.hazmat.backends.interfaces [assertion]
      find_module called for: cryptography.hazmat.primitives.kdf [assertion]
      find_module called for: cryptography.hazmat.primitives.kdf.pbkdf2 [assertion]
      find_module called for: cryptography.hazmat.primitives.constant_time [assertion]
      find_module called for: hmac [assertion]
      find_module called for: cryptography.hazmat.bindings [assertion]
      find_module called for: cryptography.hazmat.bindings._constant_time [assertion]
      find_module called for: _cffi_backend [assertion]
      find_module called for: ansible.parsing.yaml [assertion]
      find_module called for: ansible.parsing.yaml.loader [assertion]
      find_module called for: ansible.parsing.yaml.constructor [assertion]
      find_module called for: ansible.parsing.yaml.objects [assertion]
      find_module called for: ansible.vars [assertion]
      find_module called for: ansible.inventory [assertion]
      find_module called for: ansible.inventory.dir [assertion]
      find_module called for: ansible.utils.vars [assertion]
      find_module called for: uuid [assertion]
      find_module called for: ctypes [assertion]
      find_module called for: ctypes.os [assertion]
      find_module called for: ctypes.sys [assertion]
      find_module called for: ctypes._ctypes [assertion]
      find_module called for: _ctypes [assertion]
      find_module called for: ctypes.struct [assertion]
      find_module called for: ctypes.ctypes [assertion]
      find_module called for: ctypes._endian [assertion]
      find_module called for: ctypes.util [assertion]
      find_module called for: ctypes.re [assertion]
      find_module called for: ctypes.tempfile [assertion]
      find_module called for: ctypes.errno [assertion]
      find_module called for: ansible.parsing.splitter [assertion]
      find_module called for: ansible.inventory.ini [assertion]
      find_module called for: ansible.inventory.host [assertion]
      find_module called for: ansible.inventory.group [assertion]
      find_module called for: ansible.inventory.expand_hosts [assertion]
      find_module called for: ansible.parsing.utils [assertion]
      find_module called for: ansible.parsing.utils.addresses [assertion]
      find_module called for: ansible.utils.shlex [assertion]
      find_module called for: ansible.inventory.yaml [assertion]
      find_module called for: ansible.inventory.script [assertion]
      find_module called for: ansible.plugins [assertion]
      find_module called for: ansible.plugins.cache [assertion]
      find_module called for: ansible.template [assertion]
      find_module called for: ansible.template.safe_eval [assertion]
      find_module called for: ansible.template.template [assertion]
      find_module called for: ansible.template.vars [assertion]
      find_module called for: ansible.utils.listify [assertion]
      find_module called for: ansible.vars.unsafe_proxy [assertion]
      find_module called for: ansible.playbook.become [assertion]
      find_module called for: ansible.playbook.block [assertion]
      find_module called for: ansible.playbook.conditional [assertion]
      find_module called for: ansible.playbook.helpers [assertion]
      find_module called for: ansible.playbook.role [assertion]
      find_module called for: ansible.playbook.role.metadata [assertion]
      find_module called for: ansible.playbook.role.include [assertion]
      find_module called for: ansible.playbook.role.definition [assertion]
      find_module called for: ansible.playbook.taggable [assertion]
      find_module called for: ansible.playbook.role.requirement [assertion]
      find_module called for: ansible.playbook.playbook_include [assertion]
      find_module called for: ansible.playbook.task [assertion]
      find_module called for: ansible.parsing.mod_args [assertion]
      find_module called for: ansible.playbook.loop_control [assertion]
      find_module called for: ansible.playbook.role_include [assertion]
      find_module called for: ansible.executor.stats [assertion]
      find_module called for: ansible.playbook.play_context [assertion]
      find_module called for: ansible.plugins.callback [assertion]
      find_module called for: difflib [assertion]
      find_module called for: ansible.utils.helpers [assertion]
      find_module called for: ansible.vars.hostvars [assertion]
      find_module called for: ansible.vars.reserved [assertion]
      find_module called for: ansible.utils.ssh_functions [assertion]
      find_module called for: ansible.constants [assertion]
      find_module called for: ansible.plugins.cache.base [assertion]
      find_module called for: ansible.plugins.vars [assertion]
        pytest_pycollect_makeitem [hook]
            obj: <function test_filebeat_run_and_enabled at 0x2ec26e0>
            collector: <Module 'tests/test_default.py'>
            name: test_filebeat_run_and_enabled
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc instance at 0x2d822d8>
          find_module called for: testinfra.backend.docker [assertion]
          matched marked file 'testinfra.backend.docker' (from 'testinfra') [assertion]
          found cached rewritten pyc for '/usr/lib/python2.7/site-packages/testinfra/backend/docker.py' [assertion]
          find_module called for: testinfra.backend.base [assertion]
          matched marked file 'testinfra.backend.base' (from 'testinfra') [assertion]
          found cached rewritten pyc for '/usr/lib/python2.7/site-packages/testinfra/backend/base.py' [assertion]
          find_module called for: testinfra.backend.__builtin__ [assertion]
          matched marked file 'testinfra.backend.__builtin__' (from 'testinfra') [assertion]
          rewriting '/usr/lib/python2.7/site-packages/testinfra/backend/__builtin__.py' [assertion]
          find_module called for: testinfra.backend._pytest [assertion]
          matched marked file 'testinfra.backend._pytest' (from 'testinfra') [assertion]
          rewriting '/usr/lib/python2.7/site-packages/testinfra/backend/_pytest.py' [assertion]
          find_module called for: testinfra.backend.locale [assertion]
          matched marked file 'testinfra.backend.locale' (from 'testinfra') [assertion]
          rewriting '/usr/lib/python2.7/site-packages/testinfra/backend/locale.py' [assertion]
          find_module called for: testinfra.backend.logging [assertion]
          matched marked file 'testinfra.backend.logging' (from 'testinfra') [assertion]
          rewriting '/usr/lib/python2.7/site-packages/testinfra/backend/logging.py' [assertion]
          find_module called for: testinfra.backend.pipes [assertion]
          matched marked file 'testinfra.backend.pipes' (from 'testinfra') [assertion]
          rewriting '/usr/lib/python2.7/site-packages/testinfra/backend/pipes.py' [assertion]
          find_module called for: testinfra.backend.subprocess [assertion]
          matched marked file 'testinfra.backend.subprocess' (from 'testinfra') [assertion]
          rewriting '/usr/lib/python2.7/site-packages/testinfra/backend/subprocess.py' [assertion]
          find_module called for: testinfra.backend.testinfra [assertion]
          matched marked file 'testinfra.backend.testinfra' (from 'testinfra') [assertion]
          rewriting '/usr/lib/python2.7/site-packages/testinfra/backend/testinfra.py' [assertion]
          find_module called for: py._io.saferepr [assertion]
          find_module called for: encodings.unicode_escape [assertion]
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_filebeat_run_and_enabled[docker://filebeat-centos]'>, <Function 'test_filebeat_run_and_enabled[docker://filebeat-debian]'>] [hook]
        pytest_pycollect_makeitem [hook]
            obj: <module '_pytest.assertion.rewrite' from '/usr/lib/python2.7/site-packages/_pytest/assertion/rewrite.pyc'>
            collector: <Module 'tests/test_default.py'>
            name: @pytest_ar
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: {'bytearray': <type 'bytearray'>, 'IndexError': <type 'exceptions.IndexError'>, 'all': <built-in function all>, 'help': Type help() for interactive help, or help(object) for help about object., 'vars': <built-in function vars>, 'SyntaxError': <type 'exceptions.SyntaxError'>, 'unicode': <type 'unicode'>, 'UnicodeDecodeError': <type 'exceptions.UnicodeDecodeError'>, 'memoryview': <type 'memoryview'>, 'isinstance': <built-in function isinstance>, 'copyright': Copyright (c) 2001-2013 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved., 'NameError': <type 'exceptions.NameError'>, 'BytesWarning': <type 'exceptions.BytesWarning'>, 'dict': <type 'dict'>, 'input': <built-in function input>, 'oct': <built-in function oct>, 'bin': <built-in function bin>, 'SystemExit': <type 'exceptions.SystemExit'>, 'StandardError': <type 'exceptions.StandardError'>, 'format': <built-in function format>, 'repr': <built-in function repr>, 'sorted': <built-in function sorted>, 'False': False, 'RuntimeWarning': <type 'exceptions.RuntimeWarning'>, 'list': <type 'list'>, 'iter': <built-in function iter>, 'reload': <built-in function reload>, 'Warning': <type 'exceptions.Warning'>, '__package__': None, 'round': <built-in function round>, 'dir': <built-in function dir>, 'cmp': <built-in function cmp>, 'set': <type 'set'>, 'bytes': <type 'str'>, 'reduce': <built-in function reduce>, 'intern': <built-in function intern>, 'issubclass': <built-in function issubclass>, 'Ellipsis': Ellipsis, 'EOFError': <type 'exceptions.EOFError'>, 'locals': <built-in function locals>, 'BufferError': <type 'exceptions.BufferError'>, 'slice': <type 'slice'>, 'FloatingPointError': <type 'exceptions.FloatingPointError'>, 'sum': <built-in function sum>, 'getattr': <built-in function getattr>, 'abs': <built-in function abs>, 'exit': Use exit() or Ctrl-D (i.e. EOF) to exit, 'print': <built-in function print>, 'True': True, 'FutureWarning': <type 'exceptions.FutureWarning'>, 'ImportWarning': <type 'exceptions.ImportWarning'>, 'None': None, 'hash': <built-in function hash>, 'ReferenceError': <type 'exceptions.ReferenceError'>, 'len': <built-in function len>, 'credits':     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information., 'frozenset': <type 'frozenset'>, '__name__': '__builtin__', 'ord': <built-in function ord>, 'super': <type 'super'>, 'TypeError': <type 'exceptions.TypeError'>, 'license': See http://www.python.org/2.7/license.html, 'KeyboardInterrupt': <type 'exceptions.KeyboardInterrupt'>, 'UserWarning': <type 'exceptions.UserWarning'>, 'filter': <built-in function filter>, 'range': <built-in function range>, 'staticmethod': <type 'staticmethod'>, 'SystemError': <type 'exceptions.SystemError'>, 'BaseException': <type 'exceptions.BaseException'>, 'pow': <built-in function pow>, 'RuntimeError': <type 'exceptions.RuntimeError'>, 'float': <type 'float'>, 'MemoryError': <type 'exceptions.MemoryError'>, 'StopIteration': <type 'exceptions.StopIteration'>, 'globals': <built-in function globals>, 'divmod': <built-in function divmod>, 'enumerate': <type 'enumerate'>, 'apply': <built-in function apply>, 'LookupError': <type 'exceptions.LookupError'>, 'open': <built-in function open>, 'quit': Use quit() or Ctrl-D (i.e. EOF) to exit, 'basestring': <type 'basestring'>, 'UnicodeError': <type 'exceptions.UnicodeError'>, 'zip': <built-in function zip>, 'hex': <built-in function hex>, 'long': <type 'long'>, 'next': <built-in function next>, 'ImportError': <type 'exceptions.ImportError'>, 'chr': <built-in function chr>, 'xrange': <type 'xrange'>, 'type': <type 'type'>, '__doc__': "Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil' object; Ellipsis represents `...' in slices.", 'Exception': <type 'exceptions.Exception'>, 'tuple': <type 'tuple'>, 'UnicodeTranslateError': <type 'exceptions.UnicodeTranslateError'>, 'reversed': <type 'reversed'>, 'UnicodeEncodeError': <type 'exceptions.UnicodeEncodeError'>, 'IOError': <type 'exceptions.IOError'>, 'hasattr': <built-in function hasattr>, 'delattr': <built-in function delattr>, 'setattr': <built-in function setattr>, 'raw_input': <built-in function raw_input>, 'SyntaxWarning': <type 'exceptions.SyntaxWarning'>, 'compile': <built-in function compile>, 'ArithmeticError': <type 'exceptions.ArithmeticError'>, 'str': <type 'str'>, 'property': <type 'property'>, 'GeneratorExit': <type 'exceptions.GeneratorExit'>, 'int': <type 'int'>, '__import__': <built-in function __import__>, 'KeyError': <type 'exceptions.KeyError'>, 'coerce': <built-in function coerce>, 'PendingDeprecationWarning': <type 'exceptions.PendingDeprecationWarning'>, 'file': <type 'file'>, 'EnvironmentError': <type 'exceptions.EnvironmentError'>, 'unichr': <built-in function unichr>, 'id': <built-in function id>, 'OSError': <type 'exceptions.OSError'>, 'DeprecationWarning': <type 'exceptions.DeprecationWarning'>, 'min': <built-in function min>, 'UnicodeWarning': <type 'exceptions.UnicodeWarning'>, 'execfile': <built-in function execfile>, 'any': <built-in function any>, 'complex': <type 'complex'>, 'bool': <type 'bool'>, 'ValueError': <type 'exceptions.ValueError'>, 'NotImplemented': NotImplemented, 'map': <built-in function map>, 'buffer': <type 'buffer'>, 'max': <built-in function max>, 'object': <type 'object'>, 'TabError': <type 'exceptions.TabError'>, 'callable': <built-in function callable>, 'ZeroDivisionError': <type 'exceptions.ZeroDivisionError'>, 'eval': <built-in function eval>, '__debug__': True, 'IndentationError': <type 'exceptions.IndentationError'>, 'AssertionError': <type 'exceptions.AssertionError'>, 'classmethod': <type 'classmethod'>, 'UnboundLocalError': <type 'exceptions.UnboundLocalError'>, 'NotImplementedError': <type 'exceptions.NotImplementedError'>, 'AttributeError': <type 'exceptions.AttributeError'>, 'OverflowError': <type 'exceptions.OverflowError'>}
            collector: <Module 'tests/test_default.py'>
            name: __builtins__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <function test_filebeat_package at 0x2ec2668>
            collector: <Module 'tests/test_default.py'>
            name: test_filebeat_package
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc instance at 0x2d80ab8>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_filebeat_package[docker://filebeat-centos]'>, <Function 'test_filebeat_package[docker://filebeat-debian]'>] [hook]
        pytest_pycollect_makeitem [hook]
            obj: /etc/ansible/roles/filebeat/tests/test_default.py
            collector: <Module 'tests/test_default.py'>
            name: __file__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <function test_hosts_file at 0x2ec25f0>
            collector: <Module 'tests/test_default.py'>
            name: test_hosts_file
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc instance at 0x2d80830>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_hosts_file[docker://filebeat-centos]'>, <Function 'test_hosts_file[docker://filebeat-debian]'>] [hook]
        pytest_pycollect_makeitem [hook]
            obj: <_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f577aead5d0>
            collector: <Module 'tests/test_default.py'>
            name: __loader__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: [u'filebeat-centos', u'filebeat-debian']
            collector: <Module 'tests/test_default.py'>
            name: testinfra_hosts
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <module 'testinfra' from '/usr/lib/python2.7/site-packages/testinfra/__init__.pyc'>
            collector: <Module 'tests/test_default.py'>
            name: testinfra
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: /etc/ansible/roles/filebeat/tests/__pycache__/test_default.cpython-27-PYTEST.pyc
            collector: <Module 'tests/test_default.py'>
            name: __cached__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: test_default
            collector: <Module 'tests/test_default.py'>
            name: __name__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: None
            collector: <Module 'tests/test_default.py'>
            name: __package__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <module '__builtin__' (built-in)>
            collector: <Module 'tests/test_default.py'>
            name: @py_builtins
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: None
            collector: <Module 'tests/test_default.py'>
            name: __doc__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <slot wrapper '__setattr__' of 'module' objects>
            collector: <Module 'tests/test_default.py'>
            name: __setattr__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <built-in method __new__ of type object at 0x7f577adae9e0>
            collector: <Module 'tests/test_default.py'>
            name: __new__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <slot wrapper '__getattribute__' of 'module' objects>
            collector: <Module 'tests/test_default.py'>
            name: __getattribute__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <slot wrapper '__delattr__' of 'module' objects>
            collector: <Module 'tests/test_default.py'>
            name: __delattr__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <slot wrapper '__repr__' of 'module' objects>
            collector: <Module 'tests/test_default.py'>
            name: __repr__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <member '__dict__' of 'module' objects>
            collector: <Module 'tests/test_default.py'>
            name: __dict__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <slot wrapper '__init__' of 'module' objects>
            collector: <Module 'tests/test_default.py'>
            name: __init__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <method '__reduce_ex__' of 'object' objects>
            collector: <Module 'tests/test_default.py'>
            name: __reduce_ex__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <method '__reduce__' of 'object' objects>
            collector: <Module 'tests/test_default.py'>
            name: __reduce__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <slot wrapper '__str__' of 'object' objects>
            collector: <Module 'tests/test_default.py'>
            name: __str__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <method '__format__' of 'object' objects>
            collector: <Module 'tests/test_default.py'>
            name: __format__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <attribute '__class__' of 'object' objects>
            collector: <Module 'tests/test_default.py'>
            name: __class__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <method '__subclasshook__' of 'object' objects>
            collector: <Module 'tests/test_default.py'>
            name: __subclasshook__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <slot wrapper '__hash__' of 'object' objects>
            collector: <Module 'tests/test_default.py'>
            name: __hash__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <method '__sizeof__' of 'object' objects>
            collector: <Module 'tests/test_default.py'>
            name: __sizeof__
        finish pytest_pycollect_makeitem --> None [hook]
      find_module called for: _pytest._code._pytest [assertion]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_default.py' lenresult=6 outcome='passed'> [hook]
    genitems <Function 'test_hosts_file[docker://filebeat-centos]'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_hosts_file[docker://filebeat-centos]'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_hosts_file[docker://filebeat-debian]'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_hosts_file[docker://filebeat-debian]'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_filebeat_package[docker://filebeat-centos]'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_filebeat_package[docker://filebeat-centos]'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_filebeat_package[docker://filebeat-debian]'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_filebeat_package[docker://filebeat-debian]'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_filebeat_run_and_enabled[docker://filebeat-centos]'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_filebeat_run_and_enabled[docker://filebeat-centos]'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_filebeat_run_and_enabled[docker://filebeat-debian]'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_filebeat_run_and_enabled[docker://filebeat-debian]'>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_default.py' lenresult=6 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collection_modifyitems [hook]
          items: [<Function 'test_hosts_file[docker://filebeat-centos]'>, <Function 'test_hosts_file[docker://filebeat-debian]'>, <Function 'test_filebeat_package[docker://filebeat-centos]'>, <Function 'test_filebeat_package[docker://filebeat-debian]'>, <Function 'test_filebeat_run_and_enabled[docker://filebeat-centos]'>, <Function 'test_filebeat_run_and_enabled[docker://filebeat-debian]'>]
          session: <Session 'filebeat'>
          config: <_pytest.config.Config object at 0x7f576f55add0>
      finish pytest_collection_modifyitems --> [] [hook]
      pytest_collection_finish [hook]
          session: <Session 'filebeat'>
      finish pytest_collection_finish --> [] [hook]
    finish pytest_collection --> [<Function 'test_hosts_file[docker://filebeat-centos]'>, <Function 'test_filebeat_package[docker://filebeat-centos]'>, <Function 'test_filebeat_run_and_enabled[docker://filebeat-centos]'>, <Function 'test_hosts_file[docker://filebeat-debian]'>, <Function 'test_filebeat_package[docker://filebeat-debian]'>, <Function 'test_filebeat_run_and_enabled[docker://filebeat-debian]'>] [hook]
    pytest_runtestloop [hook]
        session: <Session 'filebeat'>
      pytest_runtest_protocol [hook]
          item: <Function 'test_hosts_file[docker://filebeat-centos]'>
          nextitem: <Function 'test_filebeat_package[docker://filebeat-centos]'>
        pytest_runtest_logstart [hook]
            location: ('tests/test_default.py', 6, 'test_hosts_file[docker://filebeat-centos]')
            nodeid: tests/test_default.py::test_hosts_file[docker://filebeat-centos]
        find_module called for: py._path.pathlib [assertion]
        find_module called for: pathlib [assertion]
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function 'test_hosts_file[docker://filebeat-centos]'>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name=u'_testinfra_backend' scope='module' baseid='' >
              request: <SubRequest u'_testinfra_backend' for <Function 'test_hosts_file[docker://filebeat-centos]'>>
          finish pytest_fixture_setup --> <testinfra.backend.docker.DockerBackend object at 0x2ecc210> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='TestinfraBackend' scope=u'module' baseid='' >
              request: <SubRequest 'TestinfraBackend' for <Function 'test_hosts_file[docker://filebeat-centos]'>>
          finish pytest_fixture_setup --> <testinfra.backend.docker.DockerBackend object at 0x2ecc210> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='File' scope='function' baseid='' >
              request: <SubRequest 'File' for <Function 'test_hosts_file[docker://filebeat-centos]'>>
          find_module called for: testinfra.modules.file [assertion]
          matched marked file 'testinfra.modules.file' (from 'testinfra') [assertion]
          found cached rewritten pyc for '/usr/lib/python2.7/site-packages/testinfra/modules/file.py' [assertion]
          find_module called for: testinfra.modules.__builtin__ [assertion]
          matched marked file 'testinfra.modules.__builtin__' (from 'testinfra') [assertion]
          rewriting '/usr/lib/python2.7/site-packages/testinfra/modules/__builtin__.py' [assertion]
          find_module called for: testinfra.modules._pytest [assertion]
          matched marked file 'testinfra.modules._pytest' (from 'testinfra') [assertion]
          rewriting '/usr/lib/python2.7/site-packages/testinfra/modules/_pytest.py' [assertion]
          find_module called for: testinfra.modules.datetime [assertion]
          matched marked file 'testinfra.modules.datetime' (from 'testinfra') [assertion]
          rewriting '/usr/lib/python2.7/site-packages/testinfra/modules/datetime.py' [assertion]
          find_module called for: testinfra.modules.testinfra [assertion]
          matched marked file 'testinfra.modules.testinfra' (from 'testinfra') [assertion]
          rewriting '/usr/lib/python2.7/site-packages/testinfra/modules/testinfra.py' [assertion]
          find_module called for: testinfra.modules.base [assertion]
          matched marked file 'testinfra.modules.base' (from 'testinfra') [assertion]
          found cached rewritten pyc for '/usr/lib/python2.7/site-packages/testinfra/modules/base.py' [assertion]
          find_module called for: testinfra.modules.systeminfo [assertion]
          matched marked file 'testinfra.modules.systeminfo' (from 'testinfra') [assertion]
          found cached rewritten pyc for '/usr/lib/python2.7/site-packages/testinfra/modules/systeminfo.py' [assertion]
          find_module called for: testinfra.modules.re [assertion]
          matched marked file 'testinfra.modules.re' (from 'testinfra') [assertion]
          rewriting '/usr/lib/python2.7/site-packages/testinfra/modules/re.py' [assertion]
          finish pytest_fixture_setup --> <class 'testinfra.modules.base.GNUFile'> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_hosts_file[docker://filebeat-centos]'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_default.py::test_hosts_file[docker://filebeat-centos]' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_default.py::test_hosts_file[docker://filebeat-centos]' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_default.py::test_hosts_file[docker://filebeat-centos]' when='setup' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function 'test_hosts_file[docker://filebeat-centos]'>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function 'test_hosts_file[docker://filebeat-centos]'>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_hosts_file[docker://filebeat-centos]'>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_default.py::test_hosts_file[docker://filebeat-centos]' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_default.py::test_hosts_file[docker://filebeat-centos]' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_default.py::test_hosts_file[docker://filebeat-centos]' when='call' outcome='passed'>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function 'test_hosts_file[docker://filebeat-centos]'>
            nextitem: <Function 'test_filebeat_package[docker://filebeat-centos]'>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='File' scope='function' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_hosts_file[docker://filebeat-centos]'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_default.py::test_hosts_file[docker://filebeat-centos]' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_default.py::test_hosts_file[docker://filebeat-centos]' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_default.py::test_hosts_file[docker://filebeat-centos]' when='teardown' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function 'test_filebeat_package[docker://filebeat-centos]'>
          nextitem: <Function 'test_filebeat_run_and_enabled[docker://filebeat-centos]'>
        pytest_runtest_logstart [hook]
            location: ('tests/test_default.py', 13, 'test_filebeat_package[docker://filebeat-centos]')
            nodeid: tests/test_default.py::test_filebeat_package[docker://filebeat-centos]
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function 'test_filebeat_package[docker://filebeat-centos]'>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='Package' scope='function' baseid='' >
              request: <SubRequest 'Package' for <Function 'test_filebeat_package[docker://filebeat-centos]'>>
          find_module called for: testinfra.modules.package [assertion]
          matched marked file 'testinfra.modules.package' (from 'testinfra') [assertion]
          found cached rewritten pyc for '/usr/lib/python2.7/site-packages/testinfra/modules/package.py' [assertion]
          find_module called for: testinfra.modules.command [assertion]
          matched marked file 'testinfra.modules.command' (from 'testinfra') [assertion]
          found cached rewritten pyc for '/usr/lib/python2.7/site-packages/testinfra/modules/command.py' [assertion]
          finish pytest_fixture_setup --> <class 'testinfra.modules.base.RpmPackage'> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_filebeat_package[docker://filebeat-centos]'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_default.py::test_filebeat_package[docker://filebeat-centos]' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_default.py::test_filebeat_package[docker://filebeat-centos]' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_default.py::test_filebeat_package[docker://filebeat-centos]' when='setup' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function 'test_filebeat_package[docker://filebeat-centos]'>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function 'test_filebeat_package[docker://filebeat-centos]'>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_filebeat_package[docker://filebeat-centos]'>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_default.py::test_filebeat_package[docker://filebeat-centos]' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_default.py::test_filebeat_package[docker://filebeat-centos]' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_default.py::test_filebeat_package[docker://filebeat-centos]' when='call' outcome='passed'>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function 'test_filebeat_package[docker://filebeat-centos]'>
            nextitem: <Function 'test_filebeat_run_and_enabled[docker://filebeat-centos]'>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='Package' scope='function' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_filebeat_package[docker://filebeat-centos]'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_default.py::test_filebeat_package[docker://filebeat-centos]' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_default.py::test_filebeat_package[docker://filebeat-centos]' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_default.py::test_filebeat_package[docker://filebeat-centos]' when='teardown' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function 'test_filebeat_run_and_enabled[docker://filebeat-centos]'>
          nextitem: <Function 'test_hosts_file[docker://filebeat-debian]'>
        pytest_runtest_logstart [hook]
            location: ('tests/test_default.py', 19, 'test_filebeat_run_and_enabled[docker://filebeat-centos]')
            nodeid: tests/test_default.py::test_filebeat_run_and_enabled[docker://filebeat-centos]
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function 'test_filebeat_run_and_enabled[docker://filebeat-centos]'>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='Service' scope='function' baseid='' >
              request: <SubRequest 'Service' for <Function 'test_filebeat_run_and_enabled[docker://filebeat-centos]'>>
          find_module called for: testinfra.modules.service [assertion]
          matched marked file 'testinfra.modules.service' (from 'testinfra') [assertion]
          found cached rewritten pyc for '/usr/lib/python2.7/site-packages/testinfra/modules/service.py' [assertion]
          finish pytest_fixture_setup --> <class 'testinfra.modules.base.SystemdService'> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='SystemInfo' scope='function' baseid='' >
              request: <SubRequest 'SystemInfo' for <Function 'test_filebeat_run_and_enabled[docker://filebeat-centos]'>>
          finish pytest_fixture_setup --> <testinfra.modules.base.SystemInfo object at 0x2ed5ed0> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_filebeat_run_and_enabled[docker://filebeat-centos]'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_default.py::test_filebeat_run_and_enabled[docker://filebeat-centos]' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_default.py::test_filebeat_run_and_enabled[docker://filebeat-centos]' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_default.py::test_filebeat_run_and_enabled[docker://filebeat-centos]' when='setup' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function 'test_filebeat_run_and_enabled[docker://filebeat-centos]'>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function 'test_filebeat_run_and_enabled[docker://filebeat-centos]'>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_filebeat_run_and_enabled[docker://filebeat-centos]'>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_default.py::test_filebeat_run_and_enabled[docker://filebeat-centos]' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_default.py::test_filebeat_run_and_enabled[docker://filebeat-centos]' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_default.py::test_filebeat_run_and_enabled[docker://filebeat-centos]' when='call' outcome='passed'>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function 'test_filebeat_run_and_enabled[docker://filebeat-centos]'>
            nextitem: <Function 'test_hosts_file[docker://filebeat-debian]'>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='SystemInfo' scope='function' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='Service' scope='function' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_filebeat_run_and_enabled[docker://filebeat-centos]'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_default.py::test_filebeat_run_and_enabled[docker://filebeat-centos]' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_default.py::test_filebeat_run_and_enabled[docker://filebeat-centos]' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_default.py::test_filebeat_run_and_enabled[docker://filebeat-centos]' when='teardown' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function 'test_hosts_file[docker://filebeat-debian]'>
          nextitem: <Function 'test_filebeat_package[docker://filebeat-debian]'>
        pytest_runtest_logstart [hook]
            location: ('tests/test_default.py', 6, 'test_hosts_file[docker://filebeat-debian]')
            nodeid: tests/test_default.py::test_hosts_file[docker://filebeat-debian]
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function 'test_hosts_file[docker://filebeat-debian]'>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='SystemInfo' scope='function' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='Service' scope='function' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='Package' scope='function' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='File' scope='function' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='TestinfraBackend' scope=u'module' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='TestinfraBackend' scope=u'module' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='TestinfraBackend' scope=u'module' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name=u'_testinfra_backend' scope='module' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name=u'_testinfra_backend' scope='module' baseid='' >
              request: <SubRequest u'_testinfra_backend' for <Function 'test_hosts_file[docker://filebeat-debian]'>>
          finish pytest_fixture_setup --> <testinfra.backend.docker.DockerBackend object at 0x2ecc250> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='TestinfraBackend' scope=u'module' baseid='' >
              request: <SubRequest 'TestinfraBackend' for <Function 'test_hosts_file[docker://filebeat-debian]'>>
          finish pytest_fixture_setup --> <testinfra.backend.docker.DockerBackend object at 0x2ecc250> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='File' scope='function' baseid='' >
              request: <SubRequest 'File' for <Function 'test_hosts_file[docker://filebeat-debian]'>>
          finish pytest_fixture_setup --> <class 'testinfra.modules.base.GNUFile'> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_hosts_file[docker://filebeat-debian]'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_default.py::test_hosts_file[docker://filebeat-debian]' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_default.py::test_hosts_file[docker://filebeat-debian]' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_default.py::test_hosts_file[docker://filebeat-debian]' when='setup' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function 'test_hosts_file[docker://filebeat-debian]'>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function 'test_hosts_file[docker://filebeat-debian]'>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_hosts_file[docker://filebeat-debian]'>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_default.py::test_hosts_file[docker://filebeat-debian]' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_default.py::test_hosts_file[docker://filebeat-debian]' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_default.py::test_hosts_file[docker://filebeat-debian]' when='call' outcome='passed'>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function 'test_hosts_file[docker://filebeat-debian]'>
            nextitem: <Function 'test_filebeat_package[docker://filebeat-debian]'>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='File' scope='function' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_hosts_file[docker://filebeat-debian]'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_default.py::test_hosts_file[docker://filebeat-debian]' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_default.py::test_hosts_file[docker://filebeat-debian]' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_default.py::test_hosts_file[docker://filebeat-debian]' when='teardown' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function 'test_filebeat_package[docker://filebeat-debian]'>
          nextitem: <Function 'test_filebeat_run_and_enabled[docker://filebeat-debian]'>
        pytest_runtest_logstart [hook]
            location: ('tests/test_default.py', 13, 'test_filebeat_package[docker://filebeat-debian]')
            nodeid: tests/test_default.py::test_filebeat_package[docker://filebeat-debian]
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function 'test_filebeat_package[docker://filebeat-debian]'>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='Package' scope='function' baseid='' >
              request: <SubRequest 'Package' for <Function 'test_filebeat_package[docker://filebeat-debian]'>>
          finish pytest_fixture_setup --> <class 'testinfra.modules.base.DebianPackage'> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_filebeat_package[docker://filebeat-debian]'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_default.py::test_filebeat_package[docker://filebeat-debian]' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_default.py::test_filebeat_package[docker://filebeat-debian]' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_default.py::test_filebeat_package[docker://filebeat-debian]' when='setup' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function 'test_filebeat_package[docker://filebeat-debian]'>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function 'test_filebeat_package[docker://filebeat-debian]'>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_filebeat_package[docker://filebeat-debian]'>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_default.py::test_filebeat_package[docker://filebeat-debian]' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_default.py::test_filebeat_package[docker://filebeat-debian]' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_default.py::test_filebeat_package[docker://filebeat-debian]' when='call' outcome='passed'>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function 'test_filebeat_package[docker://filebeat-debian]'>
            nextitem: <Function 'test_filebeat_run_and_enabled[docker://filebeat-debian]'>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='Package' scope='function' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_filebeat_package[docker://filebeat-debian]'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_default.py::test_filebeat_package[docker://filebeat-debian]' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_default.py::test_filebeat_package[docker://filebeat-debian]' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_default.py::test_filebeat_package[docker://filebeat-debian]' when='teardown' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function 'test_filebeat_run_and_enabled[docker://filebeat-debian]'>
          nextitem: None
        pytest_runtest_logstart [hook]
            location: ('tests/test_default.py', 19, 'test_filebeat_run_and_enabled[docker://filebeat-debian]')
            nodeid: tests/test_default.py::test_filebeat_run_and_enabled[docker://filebeat-debian]
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function 'test_filebeat_run_and_enabled[docker://filebeat-debian]'>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='Service' scope='function' baseid='' >
              request: <SubRequest 'Service' for <Function 'test_filebeat_run_and_enabled[docker://filebeat-debian]'>>
          finish pytest_fixture_setup --> <class 'testinfra.modules.base.SystemdService'> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='SystemInfo' scope='function' baseid='' >
              request: <SubRequest 'SystemInfo' for <Function 'test_filebeat_run_and_enabled[docker://filebeat-debian]'>>
          finish pytest_fixture_setup --> <testinfra.modules.base.SystemInfo object at 0x2f53090> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_filebeat_run_and_enabled[docker://filebeat-debian]'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_default.py::test_filebeat_run_and_enabled[docker://filebeat-debian]' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_default.py::test_filebeat_run_and_enabled[docker://filebeat-debian]' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_default.py::test_filebeat_run_and_enabled[docker://filebeat-debian]' when='setup' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function 'test_filebeat_run_and_enabled[docker://filebeat-debian]'>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function 'test_filebeat_run_and_enabled[docker://filebeat-debian]'>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_filebeat_run_and_enabled[docker://filebeat-debian]'>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_default.py::test_filebeat_run_and_enabled[docker://filebeat-debian]' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_default.py::test_filebeat_run_and_enabled[docker://filebeat-debian]' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_default.py::test_filebeat_run_and_enabled[docker://filebeat-debian]' when='call' outcome='passed'>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function 'test_filebeat_run_and_enabled[docker://filebeat-debian]'>
            nextitem: None
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='SystemInfo' scope='function' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='Service' scope='function' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='SystemInfo' scope='function' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='Service' scope='function' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='Package' scope='function' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='File' scope='function' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='TestinfraBackend' scope=u'module' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='TestinfraBackend' scope=u'module' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='TestinfraBackend' scope=u'module' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='TestinfraBackend' scope=u'module' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name=u'_testinfra_backend' scope='module' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='TestinfraBackend' scope=u'module' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name=u'_testinfra_backend' scope='module' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='TestinfraBackend' scope=u'module' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name=u'_testinfra_backend' scope='module' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='TestinfraBackend' scope=u'module' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name=u'_testinfra_backend' scope='module' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='TestinfraBackend' scope=u'module' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name=u'_testinfra_backend' scope='module' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='TestinfraBackend' scope=u'module' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name=u'_testinfra_backend' scope='module' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_filebeat_run_and_enabled[docker://filebeat-debian]'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_default.py::test_filebeat_run_and_enabled[docker://filebeat-debian]' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_default.py::test_filebeat_run_and_enabled[docker://filebeat-debian]' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_default.py::test_filebeat_run_and_enabled[docker://filebeat-debian]' when='teardown' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
    finish pytest_runtestloop --> True [hook]
    pytest_sessionfinish [hook]
        session: <Session 'filebeat'>
        exitstatus: 0
    cache-write cache/lastfailed: {} [cache]
      pytest_terminal_summary [hook]
          exitstatus: 0
          terminalreporter: <_pytest.terminal.TerminalReporter instance at 0x271d5f0>
      finish pytest_terminal_summary --> [] [hook]
    finish pytest_sessionfinish --> [] [hook]
    pytest_unconfigure [hook]
        config: <_pytest.config.Config object at 0x7f576f55add0>
    finish pytest_unconfigure --> [] [hook]
  finish [config:tmpdir]
